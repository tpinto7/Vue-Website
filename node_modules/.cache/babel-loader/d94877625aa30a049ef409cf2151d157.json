{"remainingRequest":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\vuetify\\lib\\components\\VCalendar\\mixins\\calendar-with-events.js","dependencies":[{"path":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\vuetify\\lib\\components\\VCalendar\\mixins\\calendar-with-events.js","mtime":1590346641961},{"path":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579994621876},{"path":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\babel-loader\\lib\\index.js","mtime":1579994621874}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../../src/components/VCalendar/mixins/calendar-with-events.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './calendar-with-events.sass'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n// Directives\nimport ripple from '../../../directives/ripple'\n\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Helpers\nimport { escapeHTML } from '../../../util/helpers'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  getDayIdentifier,\n  parseTime,\n} from '../util/timestamp'\nimport {\n  VEventParsed,\n  VEventInput,\n  parseEvent,\n  isEventOn,\n} from '../util/events'\n\n// Types\ntype VColorFunction = (event: VEventInput) => string\n\ntype VNameFunction = (event: VEventParsed, timedEvent: boolean) => string\n\ntype VTimeToY = (time: VTimestamp | number | string) => number\n\ntype VEventResetCheck = (date: VTimestamp) => void\n\ntype VEventVisualGetOffset = (visual: VEventVisual, visuals: VEventVisual[]) => number\n\ntype VEventGetter = (day: VTimestamp) => VEventParsed[]\n\ntype VEventVisualGetter = (events: VEventParsed[], timed: boolean) => VEventVisual[]\n\ntype VEventVisualToNode<D> = (visual: VEventVisual, index: number, day: D) => VNode\n\ntype VDailyEventsMap = {\n  [date: string]: {\n    parent: HTMLElement\n    more: HTMLElement | null\n    events: HTMLElement[]\n  }\n}\n\ninterface VEventVisual {\n  offset: number\n  event: VEventParsed\n  columnCount: number\n  column: number\n}\n\ninterface VDaySlotScope extends VTimestamp {\n  outside: boolean\n  index: number\n}\n\ninterface VDayBodySlotScope extends VDaySlotScope {\n  timeToY: VTimeToY\n}\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n\n  directives: {\n    ripple,\n  },\n\n  props: props.events,\n\n  computed: {\n    noEvents (): boolean {\n      return this.events.length === 0\n    },\n    parsedEvents (): VEventParsed[] {\n      return this.events.map((input, index) => parseEvent(input, index, this.eventStart, this.eventEnd))\n    },\n    eventColorFunction (): VColorFunction {\n      return typeof this.eventColor === 'function'\n        ? this.eventColor as VColorFunction\n        : () => (this.eventColor as string)\n    },\n    eventTextColorFunction (): VColorFunction {\n      return typeof this.eventTextColor === 'function'\n        ? this.eventTextColor as VColorFunction\n        : () => (this.eventTextColor as string)\n    },\n    eventNameFunction (): VNameFunction {\n      return typeof this.eventName === 'function'\n        ? this.eventName as VNameFunction\n        : (event, timedEvent) => {\n          const name = escapeHTML(event.input[this.eventName as string] as string)\n          if (event.start.hasTime) {\n            if (timedEvent) {\n              const showStart = event.start.hour < 12 && event.end.hour >= 12\n              const start = this.formatTime(event.start, showStart)\n              const end = this.formatTime(event.end, true)\n              return `<strong>${name}</strong><br>${start} - ${end}`\n            } else {\n              const time = this.formatTime(event.start, true)\n              return `<strong>${time}</strong> ${name}`\n            }\n          }\n          return name\n        }\n    },\n  },\n\n  methods: {\n    formatTime (withTime: VTimestamp, ampm: boolean): string {\n      const formatter = this.getFormatter({\n        timeZone: 'UTC',\n        hour: 'numeric',\n        minute: withTime.minute > 0 ? 'numeric' : undefined,\n      })\n\n      return formatter(withTime, true)\n    },\n    updateEventVisibility () {\n      if (this.noEvents || !this.eventMore) {\n        return\n      }\n\n      const eventHeight = this.eventHeight\n      const eventsMap = this.getEventsMap()\n\n      for (const date in eventsMap) {\n        const { parent, events, more } = eventsMap[date]\n        if (!more) {\n          break\n        }\n        const parentBounds = parent.getBoundingClientRect()\n        const last = events.length - 1\n        let hide = false\n        let hidden = 0\n        for (let i = 0; i <= last; i++) {\n          if (!hide) {\n            const eventBounds = events[i].getBoundingClientRect()\n            hide = (eventBounds.bottom + eventHeight > parentBounds.bottom && i !== last) ||\n                   events[i].style.display === 'none'\n          }\n          if (hide) {\n            const id = events[i].getAttribute('data-event') as string\n            this.hideEvents(id)\n            hidden++\n          }\n        }\n\n        if (hide) {\n          more.style.display = ''\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden)\n        } else {\n          more.style.display = 'none'\n        }\n      }\n    },\n    hideEvents (id: string) {\n      const elements = this.$refs.events as HTMLElement[]\n\n      elements.forEach(el => {\n        if (el.getAttribute('data-event') === id) {\n          el.style.display = 'none'\n        }\n      })\n    },\n    getEventsMap (): VDailyEventsMap {\n      const eventsMap: VDailyEventsMap = {}\n      const elements = this.$refs.events as HTMLElement[]\n\n      if (!elements || !elements.forEach) {\n        return eventsMap\n      }\n\n      elements.forEach(el => {\n        const date = el.getAttribute('data-date')\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: [],\n            }\n          }\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el\n          } else {\n            eventsMap[date].events.push(el)\n            el.style.display = ''\n          }\n        }\n      })\n\n      return eventsMap\n    },\n    genDayEvent ({ offset, event }: VEventVisual, index: number, day: VDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n      const relativeOffset = (offset - index) * (eventHeight + eventMarginBottom) // 1 = margin bottom\n      const dayIdentifier = getDayIdentifier(day)\n      const start = dayIdentifier === event.startIdentifier\n      const end = dayIdentifier === event.endIdentifier\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: false }\n\n      return this.genEvent(event, scope, start || day.index === 0, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end,\n        },\n        style: {\n          height: `${eventHeight}px`,\n          top: `${relativeOffset}px`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-event': event.index,\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genTimedEvent ({ offset, event, columnCount, column }: VEventVisual, index: number, day: VDayBodySlotScope): VNode {\n      const dayIdentifier = getDayIdentifier(day)\n      const start = event.startIdentifier >= dayIdentifier\n      const end = event.endIdentifier > dayIdentifier\n      const top = start ? day.timeToY(event.start) : 0\n      const bottom = end ? day.timeToY(1440) : day.timeToY(event.end)\n      const height = Math.max(this.eventHeight, bottom - top)\n      const left = columnCount === -1\n        ? offset * 5\n        : column * 100 / columnCount\n      const right = columnCount === -1\n        ? 0\n        : Math.max(0, (columnCount - column - 2) * 100 / columnCount + 10)\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: true }\n\n      return this.genEvent(event, scope, true, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: `${top}px`,\n          height: `${height}px`,\n          left: `${left}%`,\n          right: `${right}%`,\n        },\n      })\n    },\n    genEvent (event: VEventParsed, scope: object, showName: boolean, timedEvent: boolean, data: VNodeData): VNode {\n      const slot = this.$scopedSlots.event\n      const text = this.eventTextColorFunction(event.input)\n      const background = this.eventColorFunction(event.input)\n\n      return this.$createElement('div',\n        this.setTextColor(text,\n          this.setBackgroundColor(background, {\n            on: this.getDefaultMouseEventHandlers(':event', nativeEvent => ({ ...scope, nativeEvent })),\n            directives: [{\n              name: 'ripple',\n              value: this.eventRipple != null ? this.eventRipple : true,\n            }],\n            ...data,\n          })\n        ), slot\n          ? slot(scope)\n          : (showName ? [this.genName(event, timedEvent)] : undefined)\n      )\n    },\n    genName (event: VEventParsed, timedEvent: boolean): VNode {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: this.eventNameFunction(event, timedEvent),\n        },\n      })\n    },\n    genMore (day: VTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true,\n        }],\n        on: {\n          click: () => this.$emit('click:more', day),\n        },\n        style: {\n          display: 'none',\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    getEventsForDay (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayAll (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => event.allDay && isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayTimed (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => !event.allDay && isEventOn(event, identifier)\n      )\n    },\n    isSameColumn (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n      const diff = astart - bstart\n      const abs = diff < 0 ? -diff : diff\n\n      return abs < this.eventOverlapThreshold\n    },\n    isOverlapping (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n\n      if (a.offset < b.offset && bstart < astart) {\n        const aend = astart + this.eventOverlapThreshold\n        const bend = parseTime(b.event.end) as number\n        return !(astart >= bend || aend <= bstart)\n      }\n\n      return false\n    },\n    getScopedSlots () {\n      if (this.noEvents) {\n        return this.$scopedSlots\n      }\n\n      /**\n       * Over the span of a week (for example) we want to maintain an event in the same row (for weekly and monthly views).\n       * We keep track of those rows by indexToOffset. If the value in that array is -1, then we can place an event at that spot.\n       * For a daily view with timed events we arrange them based on columns and offsets. If two or more events start at around the\n       * same time (eventOverlapThreshold) they go into columns. If one event starts inside another it is indented the appropriate amount.\n       * If one event overlaps another after those adjustments are made those events are placed in columns together instead of any defined\n       * indents.\n       */\n\n      const parsedEvents = this.parsedEvents\n      const indexToOffset: number[] = parsedEvents.map(event => -1)\n      const resetOnWeekday = this.parsedWeekdays[0]\n\n      const checkReset: VEventResetCheck = day => {\n        if (day.weekday === resetOnWeekday) {\n          for (let i = 0; i < indexToOffset.length; i++) {\n            indexToOffset[i] = -1\n          }\n        }\n      }\n\n      const getOffset: VEventVisualGetOffset = (visual, visuals) => {\n        let offset = indexToOffset[visual.event.index]\n        if (offset === -1) {\n          let min = Number.MAX_SAFE_INTEGER\n          let max = -1\n          visuals.forEach(other => {\n            const otherOffset = indexToOffset[other.event.index]\n            if (otherOffset !== -1) {\n              min = Math.min(min, otherOffset)\n              max = Math.max(max, otherOffset)\n            }\n          })\n          offset = min > 0 && max !== -1 ? min - 1 : max + 1\n          indexToOffset[visual.event.index] = offset\n        }\n        return offset\n      }\n\n      const getVisuals: VEventVisualGetter = (events, timed) => {\n        const visuals: VEventVisual[] = events.map(event => ({ event, offset: 0, columnCount: -1, column: -1 }))\n        // sort events by start date/time\n        visuals.sort((a, b) => a.event.startTimestampIdentifier - b.event.startTimestampIdentifier)\n        if (timed) {\n          // timed events can be organized into columns\n          visuals.forEach(visual => {\n            if (visual.columnCount !== -1) {\n              return\n            }\n            const columns: VEventVisual[] = []\n            visuals.forEach(other => {\n              if (other.columnCount === -1 && this.isSameColumn(visual, other)) {\n                columns.push(other)\n              }\n            })\n            if (columns.length > 1) {\n              columns.forEach((visual, visualIndex) => {\n                visual.column = visualIndex\n                visual.columnCount = columns.length\n              })\n            }\n          })\n          // for any not organized into columns, if they overlap another event\n          // not in a column they are offset\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              visuals.forEach(other => {\n                const otherOffset = indexToOffset[other.event.index]\n                if (otherOffset !== -1 && other.event.endTimestampIdentifier <= visual.event.startTimestampIdentifier) {\n                  indexToOffset[other.event.index] = -1\n                }\n              })\n              visual.offset = getOffset(visual, visuals)\n            }\n          })\n          // for any not organized into columns, if a previous event overlaps this event\n          // join them into the columns\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              const columns: VEventVisual[] = [visual]\n              visuals.forEach(other => {\n                if (other !== visual && other.columnCount === -1 && this.isOverlapping(visual, other)) {\n                  columns.push(other)\n                }\n              })\n              if (columns.length > 1) {\n                columns.forEach((visual, visualIndex) => {\n                  visual.column = visualIndex\n                  visual.columnCount = columns.length\n                })\n              }\n            }\n          })\n        } else {\n          visuals.forEach(visual => {\n            visual.offset = getOffset(visual, visuals)\n          })\n        }\n        visuals.sort((a, b) => (a.offset - b.offset) || (a.column - b.column))\n        return visuals\n      }\n\n      const getSlotChildren = <D extends VDaySlotScope>(day: D, getter: VEventGetter, mapper: VEventVisualToNode<D>, timed: boolean) => {\n        checkReset(day)\n        const events = getter(day)\n        return events.length === 0\n          ? undefined\n          : getVisuals(events, timed).map((visual, index) => mapper(visual, index, day))\n      }\n\n      const slots = this.$scopedSlots\n      const slotDay = slots.day\n      const slotDayHeader = slots['day-header']\n      const slotDayBody = slots['day-body']\n\n      return {\n        ...slots,\n        day: (day: VDaySlotScope) => {\n          let children = getSlotChildren(day, this.getEventsForDay, this.genDayEvent, false)\n          if (children && children.length > 0 && this.eventMore) {\n            children.push(this.genMore(day))\n          }\n          if (slotDay) {\n            const slot = slotDay(day)\n            if (slot) {\n              children = children ? children.concat(slot) : slot\n            }\n          }\n          return children\n        },\n        'day-header': (day: VDaySlotScope) => {\n          let children = getSlotChildren(day, this.getEventsForDayAll, this.genDayEvent, false)\n\n          if (slotDayHeader) {\n            const slot = slotDayHeader(day)\n            if (slot) {\n              children = children ? children.concat(slot) : slot\n            }\n          }\n          return children\n        },\n        'day-body': (day: VDayBodySlotScope) => {\n          const events = getSlotChildren(day, this.getEventsForDayTimed, this.genTimedEvent, true)\n          let children: VNode[] = [\n            this.$createElement('div', {\n              staticClass: 'v-event-timed-container',\n            }, events),\n          ]\n\n          if (slotDayBody) {\n            const slot = slotDayBody(day)\n            if (slot) {\n              children = children.concat(slot)\n            }\n          }\n          return children\n        },\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}