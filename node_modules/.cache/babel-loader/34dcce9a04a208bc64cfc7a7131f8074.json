{"remainingRequest":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\vuetify\\lib\\components\\VTreeview\\VTreeviewNode.js","dependencies":[{"path":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\vuetify\\lib\\components\\VTreeview\\VTreeviewNode.js","mtime":1590346641961},{"path":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579994621876},{"path":"C:\\Users\\tyler\\vueWebsite\\portfolio-website\\node_modules\\babel-loader\\lib\\index.js","mtime":1579994621874}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VTreeview/VTreeviewNode.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\nimport VTreeviewNode from './VTreeviewNode'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropValidator<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genContent () {\n      const children = [\n        this.$scopedSlots.prepend && this.$scopedSlots.prepend(this.scopedProps),\n        this.genLabel(),\n        this.$scopedSlots.append && this.$scopedSlots.append(this.scopedProps),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n      if (this.hasChildren) children.unshift(this.genToggle())\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}]}